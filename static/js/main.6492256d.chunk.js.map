{"version":3,"sources":["images/mind.svg","constants/countdownTime.js","components/Header/index.js","components/Layout/index.js","components/Loader/index.js","constants/categories.js","constants/numOfQuestions.js","constants/difficulty.js","constants/questionsType.js","utils/calculateGrade.js","utils/calculateScore.js","utils/getLetter.js","utils/shuffle.js","utils/timeConverter.js","components/Offline/index.js","components/Main/index.js","components/Countdown/index.js","components/Quiz/index.js","components/ShareButton/index.js","components/Result/Stats.js","components/Result/QNA.js","components/Result/index.js","components/App/index.js","serviceWorkerRegistration.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_useState","useState","_useState2","Object","slicedToArray","promptEvent","setPromptEvent","_useState3","_useState4","appAccepted","setAppAccepted","isAppInstalled","window","matchMedia","matches","addEventListener","e","preventDefault","react_default","a","createElement","Menu","stackable","inverted","size","Item","header","style","color","position","Button","icon","labelPosition","content","onClick","prompt","userChoice","then","result","outcome","console","log","Layout","_ref","children","react","components_Header","Loader","Container","Message","Icon","name","loading","Content","CATEGORIES","key","text","value","COUNTDOWN_TIME","hours","minutes","seconds","i","push","DIFFICULTY","NUM_OF_QUESTIONS","QUESTIONS_TYPE","calculateGrade","score","percentage","parseInt","grade","remarks","calculateScore","totalQuestions","correctAnswers","Number","toFixed","getLetter","number","letter","shuffle","array","toConsumableArray","length","j","Math","floor","random","timeConverter","milliseconds","concat","slice","Offline","location","reload","Segment","placeholder","elements_Header_Header","role","aria-label","Main","startQuiz","category","setCategory","numOfQuestions","setNumOfQuestions","_useState5","_useState6","difficulty","setDifficulty","_useState7","_useState8","questionsType","setQuestionsType","_useState9","_useState10","countdownTime","setCountdownTime","_useState11","_useState12","processing","setProcessing","_useState13","_useState14","error","setError","_useState15","_useState16","offline","setOffline","handleTimeChange","_ref2","objectSpread2","defineProperty","allFieldsSelected","components_Offline","Group","divided","Image","src","mindImg","onDismiss","message","Divider","Meta","Dropdown","fluid","selection","options","onChange","_ref3","disabled","_ref4","_ref5","_ref6","search","Extra","primary","API","fetch","respone","json","data","setTimeout","response_code","results","forEach","element","correct_answer","incorrect_answers","catch","navigator","onLine","Countdown","timeOver","setTimeTaken","totalTime","timerTime","setTimerTime","_timeConverter","useEffect","timer","setInterval","newTime","clearInterval","Swal","fire","title","willClose","basic","floated","Popup","trigger","active","Quiz","endQuiz","questionIndex","setQuestionIndex","setCorrectAnswers","userSlectedAns","setUserSlectedAns","questionsAndAnswers","setQuestionsAndAnswers","timeTaken","handleItemClick","as","block","components_Countdown","floating","he","decode","question","Description","vertical","map","option","decodedOption","marginRight","point","qna","user_answer","ShareButton","share","circular","document","url","Modal","closeIcon","className","href","target","rel","marginBottom","Stats","replayQuiz","resetQuiz","_calculateGrade","textAlign","marginTop","components_ShareButton","QNA","Table","celled","striped","selectable","Row","HeaderCell","Body","item","Cell","Result","activeTab","setActiveTab","handleTabClick","widths","Result_Stats","Result_QNA","App","setLoading","setData","isQuizStarted","setIsQuizStarted","isQuizCompleted","setIsQuizCompleted","resultData","setResultData","components_Layout","components_Loader","components_Main","components_Quiz","components_Result","assign","shuffledData","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","toast","showConfirmButton","onSuccess","ReactDOM","render","StrictMode","components_App","getElementById","URL","process","origin","headers","Service-Worker","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.6492256d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mind.bfb21a23.svg\";","const COUNTDOWN_TIME = {\n  hours: [],\n  minutes: [],\n  seconds: []\n};\n\nfor (let i = 0; i < 100; i++) {\n  COUNTDOWN_TIME.hours.push({ key: i, text: i, value: i * 60 * 60 });\n}\n\nfor (let i = 0; i < 60; i++) {\n  COUNTDOWN_TIME.minutes.push({ key: i, text: i, value: i * 60 });\n}\n\nfor (let i = 0; i < 60; i++) {\n  COUNTDOWN_TIME.seconds.push({ key: i, text: i, value: i });\n}\n\nexport default COUNTDOWN_TIME;\n","import React, { useState } from 'react';\nimport { Menu, Button } from 'semantic-ui-react';\n\nconst Header = () => {\n  const [promptEvent, setPromptEvent] = useState(null);\n  const [appAccepted, setAppAccepted] = useState(false);\n\n  let isAppInstalled = false;\n\n  if (window.matchMedia('(display-mode: standalone)').matches || appAccepted) {\n    isAppInstalled = true;\n  }\n\n  window.addEventListener('beforeinstallprompt', e => {\n    e.preventDefault();\n    setPromptEvent(e);\n  });\n\n  const installApp = () => {\n    promptEvent.prompt();\n    promptEvent.userChoice.then(result => {\n      if (result.outcome === 'accepted') {\n        setAppAccepted(true);\n        console.log('User accepted the A2HS prompt');\n      } else {\n        console.log('User dismissed the A2HS prompt');\n      }\n    });\n  };\n\n  return (\n    <Menu stackable inverted size=\"massive\">\n      <Menu.Item header>\n        <h1 style={{ color: '#2185D0' }}>QuizApp</h1>\n      </Menu.Item>\n      {promptEvent && !isAppInstalled && (\n        <Menu.Item position=\"right\">\n          <Button\n            color=\"teal\"\n            icon=\"cloud download\"\n            labelPosition=\"left\"\n            content=\"Install App\"\n            onClick={installApp}\n          />\n        </Menu.Item>\n      )}\n    </Menu>\n  );\n};\n\nexport default Header;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Header from '../Header';\n\nconst Layout = ({ children }) => {\n  return (\n    <Fragment>\n      <Header />\n      <main>{children}</main>\n    </Fragment>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node\n};\n\nexport default Layout;\n","import React from 'react';\nimport { Container, Message, Icon } from 'semantic-ui-react';\n\nconst Loader = () => {\n  return (\n    <Container>\n      <Message icon size=\"big\">\n        <Icon name=\"circle notched\" loading />\n        <Message.Content>\n          <Message.Header>Just one second</Message.Header>\n          We are fetching that content for you.\n        </Message.Content>\n      </Message>\n    </Container>\n  );\n};\n\nexport default Loader;\n","const CATEGORIES = [\n  {\n    key: '0',\n    text: 'Any Category',\n    value: '0'\n  },\n  {\n    key: 9,\n    text: 'General Knowledge',\n    value: 9\n  },\n  {\n    key: 10,\n    text: 'Entertainment: Books',\n    value: 10\n  },\n  {\n    key: 11,\n    text: 'Entertainment: Films',\n    value: 11\n  },\n  {\n    key: 12,\n    text: 'Entertainment: Music',\n    value: 12\n  },\n  {\n    key: 13,\n    text: 'Entertainment: Musicals & Theatres',\n    value: 13\n  },\n  {\n    key: 14,\n    text: 'Entertainment: Television',\n    value: 14\n  },\n  {\n    key: 15,\n    text: 'Entertainment: Video Games',\n    value: 15\n  },\n  {\n    key: 16,\n    text: 'Entertainment: Board Games',\n    value: 16\n  },\n  {\n    key: 17,\n    text: 'Science & Nature',\n    value: 17\n  },\n  {\n    key: 18,\n    text: 'Science: Computers',\n    value: 18\n  },\n  {\n    key: 19,\n    text: 'Science: Mathematics',\n    value: 19\n  },\n  {\n    key: 20,\n    text: 'Mythology',\n    value: 20\n  },\n  {\n    key: 21,\n    text: 'Sports',\n    value: 21\n  },\n  {\n    key: 22,\n    text: 'Geography',\n    value: 22\n  },\n  {\n    key: 23,\n    text: 'History',\n    value: 23\n  },\n  {\n    key: 24,\n    text: 'Politics',\n    value: 24\n  },\n  {\n    key: 25,\n    text: 'Arts',\n    value: 25\n  },\n  {\n    key: 26,\n    text: 'Celebrities',\n    value: 26\n  },\n  {\n    key: 27,\n    text: 'Animals',\n    value: 27\n  },\n  {\n    key: 28,\n    text: 'Vehicles',\n    value: 28\n  },\n  {\n    key: 29,\n    text: 'Entertainment: Comics',\n    value: 29\n  },\n  {\n    key: 30,\n    text: 'Science: Gadgets',\n    value: 30\n  },\n  {\n    key: 31,\n    text: 'Entertainment: Japanese Anime & Manga',\n    value: 31\n  },\n  {\n    key: 32,\n    text: 'Entertainment: Cartoon & Animations',\n    value: 32\n  }\n];\n\nexport default CATEGORIES;\n","const NUM_OF_QUESTIONS = [];\n\nfor (let i = 1; i <= 50; i++) {\n  NUM_OF_QUESTIONS.push({ key: i, text: i, value: i });\n}\n\nexport default NUM_OF_QUESTIONS;\n","const DIFFICULTY = [\n  {\n    key: '0',\n    text: 'Any Difficulty',\n    value: '0'\n  },\n  {\n    key: 'easy',\n    text: 'Easy',\n    value: 'easy'\n  },\n  {\n    key: 'medium',\n    text: 'Medium',\n    value: 'medium'\n  },\n  {\n    key: 'hard',\n    text: 'Hard',\n    value: 'hard'\n  }\n];\n\nexport default DIFFICULTY;\n","const QUESTIONS_TYPE = [\n  {\n    key: '0',\n    text: 'Any Type',\n    value: '0'\n  },\n  {\n    key: 'multiple',\n    text: 'Multiple Choice',\n    value: 'multiple'\n  },\n  {\n    key: 'boolean',\n    text: 'True / False',\n    value: 'boolean'\n  }\n];\n\nexport default QUESTIONS_TYPE;\n","const calculateGrade = score => {\n  const percentage = parseInt(score);\n\n  let grade = null;\n  let remarks = null;\n\n  if (percentage >= 97) {\n    grade = 'A+';\n  } else if (percentage >= 93 && percentage <= 96) {\n    grade = 'A';\n  } else if (percentage >= 90 && percentage <= 92) {\n    grade = 'A-';\n  } else if (percentage >= 87 && percentage <= 89) {\n    grade = 'B+';\n  } else if (percentage >= 83 && percentage <= 86) {\n    grade = 'B';\n  } else if (percentage >= 80 && percentage <= 82) {\n    grade = 'B-';\n  } else if (percentage >= 77 && percentage <= 79) {\n    grade = 'C+';\n  } else if (percentage >= 73 && percentage <= 76) {\n    grade = 'C';\n  } else if (percentage >= 70 && percentage <= 72) {\n    grade = 'C-';\n  } else if (percentage >= 67 && percentage <= 69) {\n    grade = 'D+';\n  } else if (percentage >= 63 && percentage <= 66) {\n    grade = 'D';\n  } else if (percentage >= 60 && percentage <= 62) {\n    grade = 'D-';\n  } else if (percentage < 60) {\n    grade = 'F';\n  }\n\n  if (score >= 60) {\n    remarks = 'Congratulations, YOU PASSED!';\n  } else {\n    remarks = 'Sorry, YOU FAILED!';\n  }\n\n  return {\n    grade,\n    remarks\n  };\n};\n\nexport default calculateGrade;\n","const calculateScore = (totalQuestions, correctAnswers) => {\n  return Number(((correctAnswers * 100) / totalQuestions).toFixed(2));\n};\n\nexport default calculateScore;\n","const getLetter = number => {\n  let letter;\n\n  switch (number) {\n    case 0:\n      letter = 'A.';\n      break;\n    case 1:\n      letter = 'B.';\n      break;\n    case 2:\n      letter = 'C.';\n      break;\n    case 3:\n      letter = 'D.';\n      break;\n    default:\n      letter = null;\n      break;\n  }\n\n  return letter;\n};\n\nexport default getLetter;\n","const shuffle = array => {\n  array = [...array];\n\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n\n  return array;\n};\n\nexport default shuffle;\n","const timeConverter = milliseconds => {\n  const hours = `0${Math.floor(milliseconds / 3600000)}`.slice(-2);\n  const minutes = `0${Math.floor((milliseconds / 60000) % 60)}`.slice(-2);\n  const seconds = `0${Math.floor((milliseconds / 1000) % 60) % 60}`.slice(-2);\n\n  return {\n    hours,\n    minutes,\n    seconds\n  };\n};\n\nexport default timeConverter;\n","import React from 'react';\nimport { Container, Segment, Header, Icon } from 'semantic-ui-react';\n\nconst Offline = () => {\n  window.addEventListener('online', () => window.location.reload());\n\n  return (\n    <Container>\n      <Segment placeholder>\n        <Header icon>\n          <Icon name=\"unlink\" />\n          <h1>Offline</h1>\n          <p>\n            There is no Internet connection. We'll try to reload automatically\n            once you're back online!{' '}\n            <span role=\"img\" aria-label=\"signal\">\n              📶\n            </span>\n          </p>\n        </Header>\n      </Segment>\n    </Container>\n  );\n};\n\nexport default Offline;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  Segment,\n  Item,\n  Dropdown,\n  Divider,\n  Button,\n  Message,\n} from 'semantic-ui-react';\n\nimport mindImg from '../../images/mind.svg';\n\nimport {\n  CATEGORIES,\n  NUM_OF_QUESTIONS,\n  DIFFICULTY,\n  QUESTIONS_TYPE,\n  COUNTDOWN_TIME,\n} from '../../constants';\nimport { shuffle } from '../../utils';\n\nimport Offline from '../Offline';\n\nconst Main = ({ startQuiz }) => {\n  const [category, setCategory] = useState('0');\n  const [numOfQuestions, setNumOfQuestions] = useState(5);\n  const [difficulty, setDifficulty] = useState('0');\n  const [questionsType, setQuestionsType] = useState('0');\n  const [countdownTime, setCountdownTime] = useState({\n    hours: 0,\n    minutes: 120,\n    seconds: 0,\n  });\n  const [processing, setProcessing] = useState(false);\n  const [error, setError] = useState(null);\n  const [offline, setOffline] = useState(false);\n\n  const handleTimeChange = (e, { name, value }) => {\n    setCountdownTime({ ...countdownTime, [name]: value });\n  };\n\n  let allFieldsSelected = false;\n  if (\n    category &&\n    numOfQuestions &&\n    difficulty &&\n    questionsType &&\n    (countdownTime.hours || countdownTime.minutes || countdownTime.seconds)\n  ) {\n    allFieldsSelected = true;\n  }\n\n  const fetchData = () => {\n    setProcessing(true);\n\n    if (error) setError(null);\n\n    const API = `https://opentdb.com/api.php?amount=${numOfQuestions}&category=${category}&difficulty=${difficulty}&type=${questionsType}`;\n\n    fetch(API)\n      .then(respone => respone.json())\n      .then(data =>\n        setTimeout(() => {\n          const { response_code, results } = data;\n\n          if (response_code === 1) {\n            const message = (\n              <p>\n                The API doesn't have enough questions for your query. (Ex.\n                Asking for 50 Questions in a Category that only has 20.)\n                <br />\n                <br />\n                Please change the <strong>No. of Questions</strong>,{' '}\n                <strong>Difficulty Level</strong>, or{' '}\n                <strong>Type of Questions</strong>.\n              </p>\n            );\n\n            setProcessing(false);\n            setError({ message });\n\n            return;\n          }\n\n          results.forEach(element => {\n            element.options = shuffle([\n              element.correct_answer,\n              ...element.incorrect_answers,\n            ]);\n          });\n\n          setProcessing(false);\n          startQuiz(\n            results,\n            countdownTime.hours + countdownTime.minutes + countdownTime.seconds\n          );\n        }, 1000)\n      )\n      .catch(error =>\n        setTimeout(() => {\n          if (!navigator.onLine) {\n            setOffline(true);\n          } else {\n            setProcessing(false);\n            setError(error);\n          }\n        }, 1000)\n      );\n  };\n\n  if (offline) return <Offline />;\n\n  return (\n    <Container>\n      <Segment>\n        <Item.Group divided>\n          <Item>\n            <Item.Image src={mindImg} />\n            <Item.Content>\n              <Item.Header>\n                <h1>The Ultimate Trivia Quiz</h1>\n              </Item.Header>\n              {error && (\n                <Message error onDismiss={() => setError(null)}>\n                  <Message.Header>Error!</Message.Header>\n                  {error.message}\n                </Message>\n              )}\n              <Divider />\n              <Item.Meta>\n                <Dropdown\n                  fluid\n                  selection\n                  name=\"category\"\n                  placeholder=\"Select Quiz Category\"\n                  header=\"Select Quiz Category\"\n                  options={CATEGORIES}\n                  value={category}\n                  onChange={(e, { value }) => setCategory(value)}\n                  disabled={processing}\n                />\n                <br />\n                <Dropdown\n                  fluid\n                  selection\n                  name=\"numOfQ\"\n                  placeholder=\"Select No. of Questions\"\n                  header=\"Select No. of Questions\"\n                  options={NUM_OF_QUESTIONS}\n                  value={numOfQuestions}\n                  onChange={(e, { value }) => setNumOfQuestions(value)}\n                  disabled={processing}\n                />\n                <br />\n                <Dropdown\n                  fluid\n                  selection\n                  name=\"difficulty\"\n                  placeholder=\"Select Difficulty Level\"\n                  header=\"Select Difficulty Level\"\n                  options={DIFFICULTY}\n                  value={difficulty}\n                  onChange={(e, { value }) => setDifficulty(value)}\n                  disabled={processing}\n                />\n                <br />\n                <Dropdown\n                  fluid\n                  selection\n                  name=\"type\"\n                  placeholder=\"Select Questions Type\"\n                  header=\"Select Questions Type\"\n                  options={QUESTIONS_TYPE}\n                  value={questionsType}\n                  onChange={(e, { value }) => setQuestionsType(value)}\n                  disabled={processing}\n                />\n                <br />\n                <Dropdown\n                  search\n                  selection\n                  name=\"hours\"\n                  placeholder=\"Select Hours\"\n                  header=\"Select Hours\"\n                  options={COUNTDOWN_TIME.hours}\n                  value={countdownTime.hours}\n                  onChange={handleTimeChange}\n                  disabled={processing}\n                />\n                <Dropdown\n                  search\n                  selection\n                  name=\"minutes\"\n                  placeholder=\"Select Minutes\"\n                  header=\"Select Minutes\"\n                  options={COUNTDOWN_TIME.minutes}\n                  value={countdownTime.minutes}\n                  onChange={handleTimeChange}\n                  disabled={processing}\n                />\n                <Dropdown\n                  search\n                  selection\n                  name=\"seconds\"\n                  placeholder=\"Select Seconds\"\n                  header=\"Select Seconds\"\n                  options={COUNTDOWN_TIME.seconds}\n                  value={countdownTime.seconds}\n                  onChange={handleTimeChange}\n                  disabled={processing}\n                />\n              </Item.Meta>\n              <Divider />\n              <Item.Extra>\n                <Button\n                  primary\n                  size=\"big\"\n                  icon=\"play\"\n                  labelPosition=\"left\"\n                  content={processing ? 'Processing...' : 'Play Now'}\n                  onClick={fetchData}\n                  disabled={!allFieldsSelected || processing}\n                />\n              </Item.Extra>\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <br />\n    </Container>\n  );\n};\n\nMain.propTypes = {\n  startQuiz: PropTypes.func.isRequired,\n};\n\nexport default Main;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Popup } from 'semantic-ui-react';\nimport Swal from 'sweetalert2';\n\nimport { timeConverter } from '../../utils';\n\nconst Countdown = ({ countdownTime, timeOver, setTimeTaken }) => {\n  const totalTime = countdownTime * 1000;\n  const [timerTime, setTimerTime] = useState(totalTime);\n  const { hours, minutes, seconds } = timeConverter(timerTime);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const newTime = timerTime - 1000;\n\n      if (newTime >= 0) {\n        setTimerTime(newTime);\n      } else {\n        clearInterval(timer);\n\n        Swal.fire({\n          title: `Your Time's Up`,\n          icon: 'info',\n          timer: 5000,\n          willClose: () => timeOver(totalTime - timerTime)\n        });\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(timer);\n      setTimeTaken(totalTime - timerTime + 1000);\n    };\n\n    // eslint-disable-next-line\n  }, [timerTime]);\n\n  return (\n    <Button.Group size=\"massive\" basic floated=\"right\">\n      <Popup\n        content=\"Hours\"\n        trigger={<Button active>{hours}</Button>}\n        position=\"bottom left\"\n      />\n      <Popup\n        content=\"Minutes\"\n        trigger={<Button active>{minutes}</Button>}\n        position=\"bottom left\"\n      />\n      <Popup\n        content=\"Seconds\"\n        trigger={<Button active>{seconds}</Button>}\n        position=\"bottom left\"\n      />\n    </Button.Group>\n  );\n};\n\nCountdown.propTypes = {\n  countdownTime: PropTypes.number.isRequired,\n  timeOver: PropTypes.func.isRequired,\n  setTimeTaken: PropTypes.func.isRequired\n};\n\nexport default Countdown;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  Segment,\n  Item,\n  Divider,\n  Button,\n  Icon,\n  Message,\n  Menu,\n  Header\n} from 'semantic-ui-react';\nimport he from 'he';\n\nimport Countdown from '../Countdown';\nimport { getLetter } from '../../utils';\n\nconst Quiz = ({ data, countdownTime, endQuiz }) => {\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [userSlectedAns, setUserSlectedAns] = useState(null);\n  const [questionsAndAnswers, setQuestionsAndAnswers] = useState([]);\n  const [timeTaken, setTimeTaken] = useState(null);\n\n  const handleItemClick = (e, { name }) => {\n    setUserSlectedAns(name);\n  };\n\n  const handleNext = () => {\n    let point = 0;\n    if (userSlectedAns === he.decode(data[questionIndex].correct_answer)) {\n      point = 1;\n    }\n\n    const qna = questionsAndAnswers;\n    qna.push({\n      question: he.decode(data[questionIndex].question),\n      user_answer: userSlectedAns,\n      correct_answer: he.decode(data[questionIndex].correct_answer),\n      point\n    });\n\n    if (questionIndex === data.length - 1) {\n      return endQuiz({\n        totalQuestions: data.length,\n        correctAnswers: correctAnswers + point,\n        timeTaken,\n        questionsAndAnswers: qna\n      });\n    }\n\n    setCorrectAnswers(correctAnswers + point);\n    setQuestionIndex(questionIndex + 1);\n    setUserSlectedAns(null);\n    setQuestionsAndAnswers(qna);\n  };\n\n  const timeOver = timeTaken => {\n    return endQuiz({\n      totalQuestions: data.length,\n      correctAnswers,\n      timeTaken,\n      questionsAndAnswers\n    });\n  };\n\n  return (\n    <Item.Header>\n      <Container>\n        <Segment>\n          <Item.Group divided>\n            <Item>\n              <Item.Content>\n                <Item.Extra>\n                  <Header as=\"h1\" block floated=\"left\">\n                    <Icon name=\"info circle\" />\n                    <Header.Content>\n                      {`Question No.${questionIndex + 1} of ${data.length}`}\n                    </Header.Content>\n                  </Header>\n                  <Countdown\n                    countdownTime={countdownTime}\n                    timeOver={timeOver}\n                    setTimeTaken={setTimeTaken}\n                  />\n                </Item.Extra>\n                <br />\n                <Item.Meta>\n                  <Message size=\"huge\" floating>\n                    <b>{`Q. ${he.decode(data[questionIndex].question)}`}</b>\n                  </Message>\n                  <br />\n                  <Item.Description>\n                    <h3>Please choose one of the following answers:</h3>\n                  </Item.Description>\n                  <Divider />\n                  <Menu vertical fluid size=\"massive\">\n                    {data[questionIndex].options.map((option, i) => {\n                      const letter = getLetter(i);\n                      const decodedOption = he.decode(option);\n\n                      return (\n                        <Menu.Item\n                          key={decodedOption}\n                          name={decodedOption}\n                          active={userSlectedAns === decodedOption}\n                          onClick={handleItemClick}\n                        >\n                          <b style={{ marginRight: '8px' }}>{letter}</b>\n                          {decodedOption}\n                        </Menu.Item>\n                      );\n                    })}\n                  </Menu>\n                </Item.Meta>\n                <Divider />\n                <Item.Extra>\n                  <Button\n                    primary\n                    content=\"Next\"\n                    onClick={handleNext}\n                    floated=\"right\"\n                    size=\"big\"\n                    icon=\"right chevron\"\n                    labelPosition=\"right\"\n                    disabled={!userSlectedAns}\n                  />\n                </Item.Extra>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n        <br />\n      </Container>\n    </Item.Header>\n  );\n};\n\nQuiz.propTypes = {\n  data: PropTypes.array.isRequired,\n  countdownTime: PropTypes.number.isRequired,\n  endQuiz: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React, { Fragment } from 'react';\nimport { Button, Icon, Modal } from 'semantic-ui-react';\n\nconst ShareButton = () => {\n  const handleClick = () => {\n    navigator\n      .share({\n        title: document.title,\n        text: 'Check out this quiz app — it rocks!',\n        url: '' // eslint-disable-next-line\n      })\n      .then(() => console.log('Successfully shared'))\n      .catch(error => console.log(error.message));\n  };\n\n  return (\n    <Fragment>\n      {navigator.share ? (\n        <Button\n          title=\"Share\"\n          floated=\"right\"\n          size=\"big\"\n          circular\n          icon=\"share alternate\"\n          onClick={handleClick}\n        />\n      ) : (\n        <Modal\n          closeIcon\n          size=\"tiny\"\n          trigger={\n            <Button\n              title=\"Share\"\n              floated=\"right\"\n              size=\"big\"\n              circular\n              icon=\"share alternate\"\n            />\n          }\n        >\n          <Modal.Header className=\"ui center aligned\">Share on</Modal.Header>\n          <Modal.Content className=\"ui center aligned container\">\n            <a\n              href=\"https://www.linkedin.com/in/himanshu-hota-187995200/\" // eslint-disable-next-line\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button color=\"facebook\" size=\"big\" style={{ marginBottom: 8 }}>\n                <Icon name=\"facebook\" />\n                Facebook\n              </Button>\n            </a>\n            <a\n              href=\"https://www.linkedin.com/in/himanshu-hota-187995200/\" // eslint-disable-next-line\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button color=\"twitter\" size=\"big\" style={{ marginBottom: 8 }}>\n                <Icon name=\"twitter\" />\n                Twitter\n              </Button>\n            </a>\n            <a\n              href=\"https://www.linkedin.com/in/himanshu-hota-187995200/\" // eslint-disable-next-line\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button color=\"linkedin\" size=\"big\">\n                <Icon name=\"linkedin\" />\n                LinkedIn\n              </Button>\n            </a>\n          </Modal.Content>\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ShareButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Header, Button } from 'semantic-ui-react';\n\nimport ShareButton from '../ShareButton';\nimport { calculateScore, calculateGrade, timeConverter } from '../../utils';\n\nconst Stats = ({\n  totalQuestions,\n  correctAnswers,\n  timeTaken,\n  replayQuiz,\n  resetQuiz\n}) => {\n  const score = calculateScore(totalQuestions, correctAnswers);\n  const { grade, remarks } = calculateGrade(score);\n  const { hours, minutes, seconds } = timeConverter(timeTaken);\n\n  return (\n    <Segment>\n      <Header as=\"h1\" textAlign=\"center\" block>\n        {remarks}\n      </Header>\n      <Header as=\"h2\" textAlign=\"center\" block>\n        Grade: {grade}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Total Questions: {totalQuestions}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Correct Answers: {correctAnswers}\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Your Score: {score}%\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Passing Score: 60%\n      </Header>\n      <Header as=\"h3\" textAlign=\"center\" block>\n        Time Taken:{' '}\n        {`${Number(hours)}h ${Number(minutes)}m ${Number(seconds)}s`}\n      </Header>\n      <div style={{ marginTop: 35 }}>\n        <Button\n          primary\n          content=\"Play Again\"\n          onClick={replayQuiz}\n          size=\"big\"\n          icon=\"redo\"\n          labelPosition=\"left\"\n          style={{ marginRight: 15, marginBottom: 8 }}\n        />\n        <Button\n          color=\"teal\"\n          content=\"Back to Home\"\n          onClick={resetQuiz}\n          size=\"big\"\n          icon=\"home\"\n          labelPosition=\"left\"\n          style={{ marginBottom: 8 }}\n        />\n        <ShareButton />\n      </div>\n    </Segment>\n  );\n};\n\nStats.propTypes = {\n  totalQuestions: PropTypes.number.isRequired,\n  correctAnswers: PropTypes.number.isRequired,\n  timeTaken: PropTypes.number.isRequired,\n  replayQuiz: PropTypes.func.isRequired,\n  resetQuiz: PropTypes.func.isRequired\n};\n\nexport default Stats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\n\nconst QNA = ({ questionsAndAnswers }) => {\n  return (\n    <Table celled striped selectable size=\"large\">\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>No.</Table.HeaderCell>\n          <Table.HeaderCell>Questions</Table.HeaderCell>\n          <Table.HeaderCell>Your Answers</Table.HeaderCell>\n          <Table.HeaderCell>Correct Answers</Table.HeaderCell>\n          <Table.HeaderCell>Points</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {questionsAndAnswers.map((item, i) => (\n          <Table.Row key={i + 1}>\n            <Table.Cell>{i + 1}</Table.Cell>\n            <Table.Cell>{item.question}</Table.Cell>\n            <Table.Cell>{item.user_answer}</Table.Cell>\n            <Table.Cell>{item.correct_answer}</Table.Cell>\n            <Table.Cell>{item.point}</Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n\nQNA.propTypes = {\n  questionsAndAnswers: PropTypes.array.isRequired\n};\n\nexport default QNA;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Menu } from 'semantic-ui-react';\n\nimport Stats from './Stats';\nimport QNA from './QNA';\n\nconst Result = ({\n  totalQuestions,\n  correctAnswers,\n  timeTaken,\n  questionsAndAnswers,\n  replayQuiz,\n  resetQuiz\n}) => {\n  const [activeTab, setActiveTab] = useState('Stats');\n\n  const handleTabClick = (e, { name }) => {\n    setActiveTab(name);\n  };\n\n  return (\n    <Container>\n      <Menu fluid widths={2}>\n        <Menu.Item\n          name=\"Stats\"\n          active={activeTab === 'Stats'}\n          onClick={handleTabClick}\n        />\n        <Menu.Item\n          name=\"QNA\"\n          active={activeTab === 'QNA'}\n          onClick={handleTabClick}\n        />\n      </Menu>\n      {activeTab === 'Stats' && (\n        <Stats\n          totalQuestions={totalQuestions}\n          correctAnswers={correctAnswers}\n          timeTaken={timeTaken}\n          replayQuiz={replayQuiz}\n          resetQuiz={resetQuiz}\n        />\n      )}\n      {activeTab === 'QNA' && <QNA questionsAndAnswers={questionsAndAnswers} />}\n      <br />\n    </Container>\n  );\n};\n\nResult.propTypes = {\n  totalQuestions: PropTypes.number.isRequired,\n  correctAnswers: PropTypes.number.isRequired,\n  timeTaken: PropTypes.number.isRequired,\n  questionsAndAnswers: PropTypes.array.isRequired,\n  replayQuiz: PropTypes.func.isRequired,\n  resetQuiz: PropTypes.func.isRequired\n};\n\nexport default Result;\n","import React, { useState } from 'react';\n\nimport Layout from '../Layout';\nimport Loader from '../Loader';\nimport Main from '../Main';\nimport Quiz from '../Quiz';\nimport Result from '../Result';\n\nimport { shuffle } from '../../utils';\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [countdownTime, setCountdownTime] = useState(null);\n  const [isQuizStarted, setIsQuizStarted] = useState(false);\n  const [isQuizCompleted, setIsQuizCompleted] = useState(false);\n  const [resultData, setResultData] = useState(null);\n\n  const startQuiz = (data, countdownTime) => {\n    setLoading(true);\n    setCountdownTime(countdownTime);\n\n    setTimeout(() => {\n      setData(data);\n      setIsQuizStarted(true);\n      setLoading(false);\n    }, 1000);\n  };\n\n  const endQuiz = resultData => {\n    setLoading(true);\n\n    setTimeout(() => {\n      setIsQuizStarted(false);\n      setIsQuizCompleted(true);\n      setResultData(resultData);\n      setLoading(false);\n    }, 2000);\n  };\n\n  const replayQuiz = () => {\n    setLoading(true);\n\n    const shuffledData = shuffle(data);\n    shuffledData.forEach(element => {\n      element.options = shuffle(element.options);\n    });\n\n    setData(shuffledData);\n\n    setTimeout(() => {\n      setIsQuizStarted(true);\n      setIsQuizCompleted(false);\n      setResultData(null);\n      setLoading(false);\n    }, 1000);\n  };\n\n  const resetQuiz = () => {\n    setLoading(true);\n\n    setTimeout(() => {\n      setData(null);\n      setCountdownTime(null);\n      setIsQuizStarted(false);\n      setIsQuizCompleted(false);\n      setResultData(null);\n      setLoading(false);\n    }, 1000);\n  };\n\n  return (\n    <Layout>\n      {loading && <Loader />}\n      {!loading && !isQuizStarted && !isQuizCompleted && (\n        <Main startQuiz={startQuiz} />\n      )}\n      {!loading && isQuizStarted && (\n        <Quiz data={data} countdownTime={countdownTime} endQuiz={endQuiz} />\n      )}\n      {!loading && isQuizCompleted && (\n        <Result {...resultData} replayQuiz={replayQuiz} resetQuiz={resetQuiz} />\n      )}\n    </Layout>\n  );\n};\n\nexport default App;\n","import Swal from 'sweetalert2';\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service worker.'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              Swal.fire({\n                toast: 'true',\n                position: 'bottom',\n                icon: 'success',\n                title: 'App is ready to work offline.',\n                showConfirmButton: false,\n                timer: 6000\n              });\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}